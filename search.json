[{"path":"https://eheery.github.io/MarinePPI/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 MarinePPI authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://eheery.github.io/MarinePPI/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://eheery.github.io/MarinePPI/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2025). MarinePPI: Package (One Line, Title Case). R package version 0.0.0.9000, https://eheery.github.io/MarinePPI/.","code":"@Manual{,   title = {MarinePPI: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://eheery.github.io/MarinePPI/}, }"},{"path":"https://eheery.github.io/MarinePPI/index.html","id":"marineppi","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"MarinePPI R package calculating Population Pressure Index (PPI) marine field sites using global built-area data (e.g., GHSL). supports efficient, tile-aware raster handling site-level summaries customizable buffers.","code":""},{"path":"https://eheery.github.io/MarinePPI/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"Install development version GitHub : Next, load package R workspace:","code":"# install.packages(\"devtools\") devtools::install_github(\"eheery/MarinePPI\") library(MarinePPI)"},{"path":"https://eheery.github.io/MarinePPI/index.html","id":"specify-the-directory-for-raster-downloads","dir":"","previous_headings":"Installation","what":"Specify the directory for raster downloads","title":"What the Package Does (One Line, Title Case)","text":"MarinePPI workflow involves downloading raster data population density Global Human Settlement Layer (GHSL; https://ghsl.jrc.ec.europa.eu/) study area. Although GHSL covers entire globe, distributed individual raster tiles make downloading processing efficient. manage tiles streamline PPI calculations, MarinePPI requires dedicated raster directory. directory serves multiple purposes: Stores downloaded tiles GHSL downloaded . Caches mosaicked rasters (stitched together multiple tiles) locations span tile boundaries. Maintains consistent file structure functions rely find, reuse, write raster data efficiently. directory contain two subfolders (don’t already exist, created automatically use functions MarinePPI): downloads/ – raw GHSL tiles saved. mosaics/ – multi-tile mosaicked rasters stored stitching. can point folder computer serve raster directory. Just ensure directory exists write access.","code":"# Specify raster directory on your computer raster_directory <- \"your raster directory filepath\""},{"path":"https://eheery.github.io/MarinePPI/index.html","id":"specifications","dir":"","previous_headings":"","what":"Specifications","title":"What the Package Does (One Line, Title Case)","text":"MarinePPI workflow uses series functions identify GHSL raster files overlap input coordinates, download missing raster files downloads/ folder, automatically mosaic multiple tiles single file (needed), saved mosaics/ folder. can reuse files across sessions reduce redundant computation downloads.","code":""},{"path":"https://eheery.github.io/MarinePPI/index.html","id":"field-site-locations","dir":"","previous_headings":"Specifications","what":"Field Site Locations","title":"What the Package Does (One Line, Title Case)","text":"First, need create data frame geospatial coordinates decimal degrees field sites. example, sample dataset, PugetSoundSites, includes 22 field locations Salish Sea. (Note: default, MarinePPI functions assume lon/lat values use Coordinate Reference System, WGS84, used GPS. coordinates use different coordinate reference system, NAD83 (EPSG:4269), commonly used US federal agencies (see useful guide, need specify `locations_crs` argument get_tile_list() function ).","code":"# Load sample data set data(\"PugetSoundSites\")"},{"path":"https://eheery.github.io/MarinePPI/index.html","id":"buffer-distances","dir":"","previous_headings":"Specifications","what":"Buffer Distances","title":"What the Package Does (One Line, Title Case)","text":"Next, specify buffer distances wish use PPI calculations. values used specify focal mean radii provided kilometers. Buffer distances can provided either single value vector values, kilometers. , use example 5 buffer distances 1 km 20 km:","code":"# Specify radii for PPI calculations IN KILOMETERS b <- c(1, 2, 5, 10, 20)"},{"path":"https://eheery.github.io/MarinePPI/index.html","id":"tile-schema","dir":"","previous_headings":"Specifications","what":"Tile Schema","title":"What the Package Does (One Line, Title Case)","text":"Lastly, need access shapefile GHSL raster tile areas discern tiles overlap field sites buffer distances. using teh get_tile_schema() function:","code":"schema <- get_tile_schema(data_directory = raster_directory)"},{"path":"https://eheery.github.io/MarinePPI/index.html","id":"calculate-ppi-values","dir":"","previous_headings":"","what":"Calculate PPI values","title":"What the Package Does (One Line, Title Case)","text":"Now details needed calculate Population Proximity Indices (PPI) field sites. calculate_ppi_chunked() function identifies, downloads (missing), stitches together population density raster layer respective study area. calculates PPI values chunks (separately unique combination raster tiles associated respective field sites maximum buffer distance. returns sf points file","code":"ppi_estimates <- calculate_ppi_chunked(   locations = PugetSoundSites,   longitude_col = \"Lon_dd\",   latitude_col = \"Lat_dd\",   tile_schema = schema,   data_directory = raster_directory,   buffers_km = b,       # you can adjust this to any buffer distances   progress = TRUE                  # shows progress bars )"},{"path":"https://eheery.github.io/MarinePPI/index.html","id":"sites-that-span-multiple-tiles","dir":"","previous_headings":"Calculate PPI values","what":"Sites that span multiple tiles","title":"What the Package Does (One Line, Title Case)","text":"example , sites PugetSoundSites happen fall within single GHSL raster tile area (indicated tile column output). sites span multiple GHSL rastser tile areas, calculate_ppi_chunked() mosaic tiles together needed save new rasters mosaics/ folder raster directory. ’s example using coordinates coast Eastern Australia:","code":"# Study area as defined by coordinates in eastern Australia data(\"EasternAustraliaSites\")  ppi_estimates2 <- calculate_ppi_chunked(   locations = EasternAustraliaSites,   longitude_col = \"Longitude\",   latitude_col = \"Latitude\",   tile_schema = schema,   data_directory = raster_directory,   buffers_km = b,       # you can adjust this to any buffer distances   progress = TRUE                  # shows progress bars )"},{"path":"https://eheery.github.io/MarinePPI/index.html","id":"visualizing-ppi-gradients","dir":"","previous_headings":"Calculate PPI values","what":"Visualizing PPI Gradients","title":"What the Package Does (One Line, Title Case)","text":"cases, may interested visualizing gradients population proximity across seascapes rather deriving PPI values specific field sites. generate_ppi_grid() function calculates population proximity estimates grid cells given area resolution. example , estimate PPI within 20 km buffer distance cell 5 x 5 km grid Salish Sea bioregion. Land polygons ne_coutnries() function rnaturalearth package specified land_polygon function order cut computation time (land_polygons != NULL, PPI calculations skipped grid cells overlap completely land). rudamentary map shown provided visualizing purposes . advanced mapping, one can save spatial data layer generated generate_ppi_grid() shapefile (using sf function st_write()). Fig. 1 Visualization PPI gradient computed Salish Sea region. Code generating figure shown , using 20km buffer radius 5 km resolution grid cells.","code":"library(ggplot2)  # Set bounds  salish_sea_region <- list(   lon = c(-125.93, -120.65),   lat = c(46.59, 50.86) )  # Land polygons land <- rnaturalearth::ne_countries(scale = \"large\", returnclass = \"sf\")  # Compute PPI gradient ppi_gradient <- generate_ppi_grid(   lon = salish_sea_region$lon,   lat = salish_sea_region$lat,   buffers_km = 20, # 20 km buffer radius for PPI calculations   tile_schema = schema,   data_directory = raster_directory,   land_polygons = land,   grid_resolution_km = 5) # 5 km x 5 km grid cells  # Visualize ggplot() +    geom_sf(data = ppi_gradient$PPI, aes(fill = PPI20km), color = NA) +   geom_sf(data = ppi_gradient$Land ) +   theme_minimal()"},{"path":"https://eheery.github.io/MarinePPI/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"What the Package Does (One Line, Title Case)","text":"welcome contributions! Please open issues submit pull requests.","code":""},{"path":"https://eheery.github.io/MarinePPI/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"What the Package Does (One Line, Title Case)","text":"package licensed MIT License.","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/EasternAustraliaSites.html","id":null,"dir":"Reference","previous_headings":"","what":"Made-Up Marine Sites in Eastern Australia — EasternAustraliaSites","title":"Made-Up Marine Sites in Eastern Australia — EasternAustraliaSites","text":"dataset arbitrary geospatial coordinates along Eastern Australian coastline.","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/EasternAustraliaSites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Made-Up Marine Sites in Eastern Australia — EasternAustraliaSites","text":"","code":"EasternAustraliaSites"},{"path":"https://eheery.github.io/MarinePPI/reference/EasternAustraliaSites.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Made-Up Marine Sites in Eastern Australia — EasternAustraliaSites","text":"data frame 5 rows 3 variables: Longitude Longitude decimal degrees (E) Latitude Latitude decimal degrees (S)","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/PugetSoundSites.html","id":null,"dir":"Reference","previous_headings":"","what":"Puget Sound Sampling Locations — PugetSoundSites","title":"Puget Sound Sampling Locations — PugetSoundSites","text":"dataset site coordinates names 22 marine field sites Salish Sea.","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/PugetSoundSites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Puget Sound Sampling Locations — PugetSoundSites","text":"","code":"PugetSoundSites"},{"path":"https://eheery.github.io/MarinePPI/reference/PugetSoundSites.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Puget Sound Sampling Locations — PugetSoundSites","text":"data frame N rows 3 variables: Lon_dd Longitude decimal degrees Lat_dd Latitude decimal degrees Location Site name","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/calculate_ppi.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate PPI for a set of sites or grid cells given one or more buffer distances — calculate_ppi","title":"Calculate PPI for a set of sites or grid cells given one or more buffer distances — calculate_ppi","text":"function computes focal mean population density within one buffer distances around set input locations polygons, using exactextractr package accurate spatial summaries.","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/calculate_ppi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate PPI for a set of sites or grid cells given one or more buffer distances — calculate_ppi","text":"","code":"calculate_ppi(locs, buffer, compiled_raster, progress = FALSE)"},{"path":"https://eheery.github.io/MarinePPI/reference/calculate_ppi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate PPI for a set of sites or grid cells given one or more buffer distances — calculate_ppi","text":"locs sf object geospatial features (typically POINTS POLYGONS). buffer numeric vector one buffer distances (kilometers) use focal mean calculations. compiled_raster terra raster object containing population densities. progress Logical; TRUE, shows progress bar exactextractr::exact_extract() operations.","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/calculate_ppi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate PPI for a set of sites or grid cells given one or more buffer distances — calculate_ppi","text":"sf object additional columns PPI buffer (e.g., PPI-10km).","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/calculate_ppi_chunked.html","id":null,"dir":"Reference","previous_headings":"","what":"Chunked PPI calculation for each unique tile or mosaic combination — calculate_ppi_chunked","title":"Chunked PPI calculation for each unique tile or mosaic combination — calculate_ppi_chunked","text":"Chunked PPI calculation unique tile mosaic combination","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/calculate_ppi_chunked.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chunked PPI calculation for each unique tile or mosaic combination — calculate_ppi_chunked","text":"","code":"calculate_ppi_chunked(   locations,   longitude_col = 1,   latitude_col = 2,   tile_schema,   data_directory,   buffers_km = c(5, 10, 20),   locations_crs = 4326,   tif_prefix = \"GHS_BUILT_S_E2030_GLOBE_R2023A_54009_100_V1_0_\",   progress = FALSE )"},{"path":"https://eheery.github.io/MarinePPI/reference/calculate_ppi_chunked.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chunked PPI calculation for each unique tile or mosaic combination — calculate_ppi_chunked","text":"locations data frame matrix longitude latitude longitude_col column containing longitude decimal degrees (character numeric); defaults column 1 latitude_col column containing latitude decimal degrees (character numeric); defaults column 2 tile_schema sf object GHSL tile polygons tile_id column data_directory base directory containing \"downloads\" \"mosaics\" folders buffers_km Vector buffer distances (km) use PPI calculation locations_crs CRS code input coordinates (default 4326) tif_prefix Prefix used naming .tif files (default matches GHSL 2023 dataset) progress Logical. TRUE, show progress bars exact_extract","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/calculate_ppi_chunked.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chunked PPI calculation for each unique tile or mosaic combination — calculate_ppi_chunked","text":"sf object PPI columns, row order locations","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/create_tile_mosaics.html","id":null,"dir":"Reference","previous_headings":"","what":"Create raster mosaics for unique tile combinations — create_tile_mosaics","title":"Create raster mosaics for unique tile combinations — create_tile_mosaics","text":"Create raster mosaics unique tile combinations","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/create_tile_mosaics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create raster mosaics for unique tile combinations — create_tile_mosaics","text":"","code":"create_tile_mosaics(   tile_list,   data_directory,   tif_prefix = \"GHS_BUILT_S_E2030_GLOBE_R2023A_54009_100_V1_0_\" )"},{"path":"https://eheery.github.io/MarinePPI/reference/create_tile_mosaics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create raster mosaics for unique tile combinations — create_tile_mosaics","text":"tile_list list character vectors (output get_tile_list) data_directory Directory \"downloads\" \"mosaics\" folders /created tif_prefix Prefix used .tif file naming","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/create_tile_mosaics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create raster mosaics for unique tile combinations — create_tile_mosaics","text":"character vector created mosaic file paths (empty none created)","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/download_tiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for missing GHS raster tiles and download them if needed — download_tiles","title":"Check for missing GHS raster tiles and download them if needed — download_tiles","text":"Check missing GHS raster tiles download needed","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/download_tiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for missing GHS raster tiles and download them if needed — download_tiles","text":"","code":"download_tiles(   tile_list,   data_directory,   URL = NULL,   tif_prefix = \"GHS_BUILT_S_E2030_GLOBE_R2023A_54009_100_V1_0_\" )"},{"path":"https://eheery.github.io/MarinePPI/reference/download_tiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for missing GHS raster tiles and download them if needed — download_tiles","text":"tile_list list tile ID vectors (e.g., output get_tile_list) data_directory Directory \"downloads\" folder created tiles stored URL Base URL GHSL raster zip file library tif_prefix Prefix used naming .tif files","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/download_tiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for missing GHS raster tiles and download them if needed — download_tiles","text":"named logical vector indicating whether tile now present","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/generate_ppi_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Grid and Calculate PPI Across a Marine Study Area — generate_ppi_grid","title":"Generate a Grid and Calculate PPI Across a Marine Study Area — generate_ppi_grid","text":"Creates regular spatial grid across user-specified bounding box added buffer. Excludes fully terrestrial grid cells based land polygon overlap. remaining cells (partially fully marine), calculates Population Pressure Index (PPI) one buffer distances.","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/generate_ppi_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Grid and Calculate PPI Across a Marine Study Area — generate_ppi_grid","text":"","code":"generate_ppi_grid(   lon,   lat,   buffers_km = c(5, 10, 20),   tile_schema,   data_directory,   land_polygons = NULL,   grid_resolution_km = 10,   locations_crs = 4326,   crs_projected = 3857,   land_buffer = -1000,   tif_prefix = \"GHS_BUILT_S_E2030_GLOBE_R2023A_54009_100_V1_0_\",   progress = FALSE )"},{"path":"https://eheery.github.io/MarinePPI/reference/generate_ppi_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Grid and Calculate PPI Across a Marine Study Area — generate_ppi_grid","text":"lon Numeric vector length 1 greater: longitudes decimal degrees representing range (centroid) study area. lat Numeric vector length 2: latitudes decimal degrees representing range (centroid) study area. buffers_km Numeric vector one buffer radii (kilometers) used estimate PPI. tile_schema sf object GHSL tile polygons tile_id column data_directory base directory containing \"downloads\" \"mosaics\" folders land_polygons sf polygon object land masses within study area PPI calculations skipped (means reducing computation time). Default = NULL. grid_resolution_km Numeric. Width height grid cells kilometers. Default 10 km; finer resolution (ex: 1km) provide finer gradient nicer visual, takes lot longer run. locations_crs CRS code input coordinates (default 4326) crs_projected CRS use grid generation area calculations (default: 3857 Web Mercator). land_buffer Negative buffer distance (meters) assumed land polygon (provided) case inprecise mapping (eliminate grid cells PPI calculations actually land). Default = 1000 m. tif_prefix Prefix used naming .tif files (default matches GHSL 2023 dataset) progress Logical. TRUE, show progress bars exact_extract","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/generate_ppi_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Grid and Calculate PPI Across a Marine Study Area — generate_ppi_grid","text":"list PPI, sf polygon object grid cells computed PPI estimates buffer distance, (land polygons provided) Land, cropped land polygons coordinate reference system grid polygons.","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/get_rasters.html","id":null,"dir":"Reference","previous_headings":"","what":"Load the correct raster (single or mosaic) for each location from tile_list, with memoised loading — get_rasters","title":"Load the correct raster (single or mosaic) for each location from tile_list, with memoised loading — get_rasters","text":"Load correct raster (single mosaic) location tile_list, memoised loading","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/get_rasters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load the correct raster (single or mosaic) for each location from tile_list, with memoised loading — get_rasters","text":"","code":"get_rasters(   tile_list,   data_directory,   tif_prefix = \"GHS_BUILT_S_E2030_GLOBE_R2023A_54009_100_V1_0_\",   return_paths = FALSE )"},{"path":"https://eheery.github.io/MarinePPI/reference/get_rasters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load the correct raster (single or mosaic) for each location from tile_list, with memoised loading — get_rasters","text":"tile_list list tile ID vectors (get_tile_list) data_directory base directory containing \"downloads/\" \"mosaics/\" folders tif_prefix Prefix used naming .tif files return_paths Logical. TRUE, returns file paths instead loading rasters. Default FALSE","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/get_rasters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load the correct raster (single or mosaic) for each location from tile_list, with memoised loading — get_rasters","text":"list either terra::rast objects character file paths, one per entry tile_list","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/get_tile_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify GHSL tile IDs needed to cover spatial locations with a specified buffer — get_tile_list","title":"Identify GHSL tile IDs needed to cover spatial locations with a specified buffer — get_tile_list","text":"Given set geographic coordinates (e.g., sampling sites institution locations), function identifies GHSL population raster tiles intersect buffer specified radius around point. returns list tile ID vectors, one per input point.","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/get_tile_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify GHSL tile IDs needed to cover spatial locations with a specified buffer — get_tile_list","text":"","code":"get_tile_list(locs_sf, tile_schema, buffers_km = 10)"},{"path":"https://eheery.github.io/MarinePPI/reference/get_tile_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify GHSL tile IDs needed to cover spatial locations with a specified buffer — get_tile_list","text":"locs_sf sf object sites (grid polygons). tile_schema sf object representing GHSL tile grid schema, tile_id column. buffers_km Numeric buffer radius kilometers (default 10).","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/get_tile_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify GHSL tile IDs needed to cover spatial locations with a specified buffer — get_tile_list","text":"list character vectors, containing GHSL tile IDs intersecting buffer around location.","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/get_tile_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify GHSL tile IDs needed to cover spatial locations with a specified buffer — get_tile_list","text":"","code":"if (FALSE) { # \\dontrun{ # Example with mock coordinates and GHSL tile schema: coords <- data.frame(lon = c(12.5, -122.3), lat = c(41.9, 37.8)) tile_list <- get_tile_list(coords, tile_schema = ghsl_tile_shapefile, buffers_km = 10) } # }"},{"path":"https://eheery.github.io/MarinePPI/reference/get_tile_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and load the GHSL tile schema shapefile (land tiles only) — get_tile_schema","title":"Download and load the GHSL tile schema shapefile (land tiles only) — get_tile_schema","text":"function checks GHSL tile schema shapefile given local directory. shapefile missing, downloads unzips schema official GHSL (Global Human Settlement Layer) repository. returns tile schema sf object.","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/get_tile_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and load the GHSL tile schema shapefile (land tiles only) — get_tile_schema","text":"","code":"get_tile_schema(   data_directory,   tile_schema_URL =     \"https://ghsl.jrc.ec.europa.eu/download/GHSL_data_54009_shapefile.zip\" )"},{"path":"https://eheery.github.io/MarinePPI/reference/get_tile_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and load the GHSL tile schema shapefile (land tiles only) — get_tile_schema","text":"data_directory character string specifying directory tile schema shapefile stored. present, downloaded . tile_schema_URL character string specifying URL zipped tile schema shapefile. Defaults GHSL land tile schema URL.","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/get_tile_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and load the GHSL tile schema shapefile (land tiles only) — get_tile_schema","text":"sf object containing tile schema polygons tile_id column.","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/get_tile_schema.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and load the GHSL tile schema shapefile (land tiles only) — get_tile_schema","text":"function ensures returned object includes tile_id column, required matching spatial buffers correct raster tiles. also filters land tiles , based filenames include \"tile_schema_land.shp\".","code":""},{"path":"https://eheery.github.io/MarinePPI/reference/get_tile_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and load the GHSL tile schema shapefile (land tiles only) — get_tile_schema","text":"","code":"if (FALSE) { # \\dontrun{ schema <- get_tile_schema(data_directory = \"Reference Files/rasters\") plot(schema[\"tile_id\"]) } # }"}]
